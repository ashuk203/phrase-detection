
Sorted Patterns:
[{'TEXT': 'of'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'in'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'in'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'for'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'to'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'on'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '.'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'from'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'on'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'as'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'with'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'and'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'for'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'that'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'from'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'PROPN'}]
[{'TEXT': 'to'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '.'}, {'TEXT': 'this'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'in'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'between'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'new'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'that'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'novel'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'high'}, {'TEXT': 'dimensional'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'by'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'from'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'with'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '\n'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'into'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'to'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'underlying'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'resulting'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'and'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'by'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'both'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'on'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'proposed'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'if'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'improve'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'using'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'large'}, {'TEXT': 'scale'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'art'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'whole'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'the'}, {'TEXT': 'corresponding'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'non'}, {'TEXT': 'convex'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'low'}, {'TEXT': 'dimensional'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'POS': 'NOUN'}, {'POS': 'PROPN'}]
[{'TEXT': 'into'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'is'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'for'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'real'}, {'TEXT': 'world'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'POS': 'PROPN'}, {'POS': 'PROPN'}]
[{'TEXT': '.'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'without'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'within'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '\n'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'via'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'propose'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'solve'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '.'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'among'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'standard'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'an'}, {'TEXT': 'efficient'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'with'}, {'TEXT': 'different'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'deep'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'like'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'best'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'data'}, {'TEXT': 'and'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'global'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'the'}, {'TEXT': 'current'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'during'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'TEXT': 'different'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'real'}, {'TEXT': 'time'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'learning'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '\n'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'through'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'on'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'g'}, {'TEXT': '.'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'specific'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'model'}, {'TEXT': 'and'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'general'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'across'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'present'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'well'}, {'TEXT': 'known'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'within'}, {'TEXT': 'a'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'to'}, {'TEXT': 'end'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'that'}, {'TEXT': 'our'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'widely'}, {'TEXT': 'used'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'in'}, {'TEXT': 'the'}, {'POS': 'NOUN'}, {'POS': 'VERB'}]
[{'TEXT': 'multi'}, {'TEXT': 'task'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'for'}, {'POS': 'NOUN'}, {'POS': 'PROPN'}]
[{'TEXT': 'in'}, {'TEXT': 'many'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'a'}, {'TEXT': 'supervised'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': '.'}, {'TEXT': 'these'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
[{'TEXT': 'of'}, {'POS': 'ADJ'}, {'POS': 'NOUN'}]
[{'TEXT': 'processing'}, {'TEXT': 'and'}, {'POS': 'NOUN'}, {'POS': 'NOUN'}]
Sorted Keywords:
['web tasks', 'gradient algorithm', 'tensorflow including', 'parser input', 'algorithmic facts', 'method optimizes', 'web generate', 'code optimization', 'malware images', 'security patches', 'adaboost problem', 'framework algorithms', 'graphics software', 'concurrent constraint', 'kinect datasets', 'malware samples', 'expectation backpropagation', 'software code', 'subsequent algorithms', 'imagenet recognition', 'rnn architectures', 'data parallelism', 'rnn schmidhuber', 'backpropagation method', 'compilability framework', 'computing nodes', 'developmental robotics', 'local histograms', 'adaboost algorithms', 'way algorithms', 'keypoint detections', 'training autoencoders', 'computational algorithms', 'correction detection', 'flow algorithms', 'client app', 'approximation algorithm', 'neural net', 'web browser', 'multitask kernel', 'greedy optimization', 'algorithms process', 'online algorithms', 'neural learning', 'android malware', 'linear grammars', 'edge disjoint', 'classifier networks', 'image recognition', 'stereoscopic images', 'global kernel', 'algorithms exist', 'optimization solver', 'constraint solvers', 'trees ensembles', 'lstm network', 'interactive debugging', 'android apps', 'computational problem', 'vulnerability detection', 'optimization iterations', 'imagenet object', 'traditional passwords', 'various algorithms', 'lstm layers', 'operating systems', 'simple rnns', 'convolutional nets', 'backpropagation step', 'algorithms performing', 'similar software', 'multiprocessor tasks', 'mesh renderer', 'lstm computation', 'algorithms can', 'autoencoder networks', 'current algorithms', 'program code', 'backpropagation algorithm', 'unsupervised representation', 'fingerprint authentication', 'software should', 'kernel manages', 'kernel perceptrons', 'svm classification', 'feature histogram', 'algorithm registers', 'game engines', 'algorithmic tasks', 'processing algorithms', 'backdoor detection', 'algorithms involves', 'gradient algorithms', 'feature preprocessing', 'sift surf', 'algorithm non', 'adaboost s', 'web user', 'user interface', 'security updates', 'biometric authentication', 'cluster computing', 'datalog programs', 'algorithms required', 'ipad app', 'backpropagation training', 'grayscale images', 'backpropagation network', 'classifier predictions', 'password authentication', 'datalog program', 'parser can', 'online algorithm', 'algorithm iterates', 'software will', 'active users', 'neural algorithms', '3d scene', 'autoencoder stack', 'softmax layer', 'clustered computing', 'sequence optimization', 'novel rnn', 'submodular optimization', 'supercomputer node', 'network classifier', 'system tensorflow', 'vector segmentation', 'algorithms ranging', 'android development', 'security applications', 'probabilistic automata', 'autoencoder can', 'tensorflow based', 'optimization algorithms', 'recognition networks', 'simulator supports', 'classifier prediction', 'possible malware', 'algorithm searches', 'computational problems', 'cloud storage', 'boinc volunteer', 'software requirement', 'constraint solving', 'practical algorithms', 'output texture', 'candidate windows', 'runtime applications', 'subgradient optimization', 'candidate algorithms', 'convolutional networks', 'cpu architecture', 'backpropagation learning', 'quantum algorithm', 'available algorithms', 'correspondence algorithms', 'text editor', 'many algorithms', 'path algorithm', 'encoder lstm', 'unlabeled datasets', 'quicksort mergesort', 'algorithm consists', 'web browsers', 'authentication applications', 'classification algorithm', 'game engine', 'convolution architecture', 'tractable instances', 'parallel computing', 'expert algorithms', 'satisfiability checking', 'classification algorithms', 'autoencoders position', 'imagenet images', 'algorithms exploring', 'lstm net', 'algorithm recognizes', 'adaboost algorithm', 'stereo correspondence', 'push relabel', 'optimization programming', 'algorithm finds', 'church turing', 'function complexity', 'nmf problems', 'programming language', 'algorithm detects', 'kernel computation', 'system operated', 'neural classifiers', 'programming languages', 'matlab image', 'algorithm designed', 'basic algorithms', 'convolutional auto', 'layers lstm', 'task parallel', 'lstm networks', 'server availability', 'lstm method', 'imagenet training', 'unsupervised gans', 'support vector', 'graph algorithm', 'deep rnn', 'time algorithm', 'algorithm named', 'imagenet classification', 'graph invariants', 'traditional password', 'algorithms known', 'convolutional pooling', 'software tests', 'arm cortex', 'example computation', 'certain optimization', 'words autoencoder', '3d applications', 'lstm layer', 'levenshtein damerau', 'possible optimization', 'algorithms achieves', 'deep lstm', 'learning algorithms', 'app can', 'system operates', 'malicious software', 'earlier algorithms', 'line algorithm', 'treewidth based', 'embedding algorithms', 'software requirements', 'network kernel', 'vertex disjoint', 'computational learning', 'complexity polynomial', 'web users', 'agent oriented', 'authentication system', 'autoencoder type', 'convolutional feature', 'formal languages', 'localization framework', 'performance algorithms', 'neural network', 'comparison algorithms', 'application testing', 'software processes', 'automata networks', 'efficient algorithms', 'mesh segmentation', 'worker server', 'resampling algorithms', 'training gradient', 'user interfaces', 'logic computations', 'vulnerable computer', 'iterative algorithms', 'pattern class', 'web source', 'kernel cca', 'sift descriptors', 'subsequence alignment', 'unsupervised word', 'satisfying assignment', 'gpu platform', 'constraint satisfaction', 'user authentication', 'algorithms should', 'compaction algorithm', 'standard backpropagation', 'deep autoencoders', 'oracle turing', 'neural machine', 'identity authentication', 'computational model', 'graph nodes', 'software described', 'linear complexity', 'convolution tree', 'optimisation heuristics', 'art voxel', 'edge detection', 'circuit complexity', 'optimization parameters', 'planar graphs', 'service attack', 'model complexity', 'gradient methods', 'planning algorithm', 'kernel approaches', 'corner detection', 'sampling pixels', 'wavelet trees', 'malware attacks', 'smt solvers', 'pattern classes', 'software based', 'algorithms involve', 'algorithm proposes', 'multiple lstm', 'datalog rules', 'software testing', 'quadratic objectives', 'autoencoder generative', 'software system', 'pipeline architecture', 'imagenet dataset', 'outputs recognition', 'lstm units', 'binary svms', 'web increasing', 'neural controllers', 'opencl architecture', 'software toolkit', 'language model', 'software simulator', 'software distributions', 'debugger uses', 'concept parser', 'treewidth k', 'convolution autoencoder', 'statistical machine', 'parallel programs', 'neural turing', 'linear programs', 'sparse svms', 'computer algorithm', 'apps considered', 'generating algorithms', 'automatic coreference', 'kernel framework', 'learning parameters', 'histogram segmentation', 'windows linux', 'malicious inputs', 'program optimization', 'classifier ensembles', 'backpropagation gradient', 'effective algorithms', '3d meshes', 'recurrent networks', 'svm classifier', 'supervised machine', 'algorithms perform', 'algorithmic machine', 'inapproximability results', 'computation time', 'algorithm includes', 'concurrent computing', 'complexity classes', 'png images', 'vc theory', 'parse tree', 'optimization e', 'algorithm solves', 'apple image', 'stochastic subgradient', 'feedforward networks', 'viruses worms', 'encryption control', 'optimal complexity', 'parallelism data', 'stochastic gradient', 'runtime memory', 'q learning', 'graphics code', 'autoencoder architecture', 'algorithms scale', 'optimization method', 'octree data', 'recognition algorithm', 'optimization difficulty', 'autoencoder approach', 'federated clouds', 'algorithm thanks', 'input tree', 'reinforcement learning', 'web server', 'approximation algorithms', 'weighted graphs', 'related optimization', 'flexible kernel', 'computational entities', 'optimization program', 'scheme interpreters', 'constraint program', 'image compression', 'optimization issues', 'parsing algorithms', 'memory footprint', 'multiagent environments', 'pixels lying', 'sparse convolution', 'c programming', 'software component', 'recursive calls', 'kernel svms', 'better algorithms', 'gradient descent', 'password file', 'novel perceptron', 'hard optimization', 'interactive rendering', 'gnu prolog', 'conditional gan', 'algorithms detailing', 'suffix tree', 'k nn', 'classic algorithms', 'asynchronous computations', 'software entity', 'autoencoder structure', 'pixel coordinates', 'popular algorithms', 'linear programming', 't sne', 'web requires', 'multiclass svm', 'input parsing', 'complexity theory', 'graph grammar', 'text preprocessing', 'web application', 'algorithmic segmenters', 'malware classifiers', 'lstm model', 'tree lstm', 'temporal reinforcement', 'script codebase', 'robotics domain', 'dataflow programming', 'prolog prototype', 'optimization solves', 'android application', 'c language', 'web crawling', 'multiple algorithms', 'ide support', 'text summarization', 'language optimization', 'parameter optimization', 'color image', 'numerical problems', 'import vector', 'isomorphic subgraphs', 'constraint satisfiability', 'software entities', 'databases datalog', 'probabilistic backpropagation', 'algorithm bounding', 'coreference model', 'unlabeled dataset', 'graph traversal', 'bootstrap algorithm', '3d models', 'complexity linear', 'network overfitting', 'algorithms presented', 'graph transformation', 'image classifier', 'classifier training', 'optimization problem', 'constraint solver', 'feature reinforcement', 'algorithm could', 'convolutional network', 'perceptron architecture', 'svm optimization', 'code algorithm', 'programming rules', 'software reliability', 'thresholding algorithms', 'graphics processer', 'simple preprocessing', 'toolkit featured', 'malware families', 'signals processing', 'optimization technique', 'convolutional sparse', 'gpu algorithm', 'iterative minimization', 'cs svm', 'volumetric rendering', 'training inputs', 'gpu graphics', 'machines learning', 'simd architectures', 'graph node', 'turing machines', 'algorithm performance', 'hyperparameter optimization', 'learning classifiers', 'recurrent architectures', 'parser stack', 'unconstrained optimization', 'algorithms provided', 'rendering models']